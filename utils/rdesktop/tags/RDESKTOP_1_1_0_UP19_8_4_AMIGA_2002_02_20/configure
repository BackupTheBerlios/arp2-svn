#!/bin/sh
#
# rdesktop: A Remote Desktop Protocol client
# configure script
# Copyright (C) Matthew Chapman 1999-2001
#

echo "# Generated by $0 $*" >Makeconf

ssl=-1;
gui="xwin";

auto_detect_ssl_libs () {
  #if SSL_LIBS already exist in Makeconf, don't add it again
  grep "SSL_LIBS" Makeconf >/dev/null 2>/dev/null
  if [ $? -eq 0 ]; then
     break
  fi

  #testing if find got the features we're using, if not print a warning.
  find /tmp -name "testfindcapabilities" -print > /dev/null 2>/dev/null
  if [ $? -eq 1 ]; then
      echo
      echo "warning: can't autodetect OpenSSL. Use the --with-openssl switch, "
      echo "if you wish to use OpenSSL instead of the internal crypto."
      echo "This warning is nothing to worry about, unless you absoluteley"
      echo "want to use OpenSSL"
      echo "  You may also wish to use the --with-ssl-includes=, --with-ssl-libs="
      echo "switches."
      echo
      echo "OpenSSL is available from http://www.openssl.org"
      echo
  else
  	find /usr/freeware/lib32 /usr/lib /usr/local/lib /usr/local/ssl /usr/local/openssl /opt/lib /opt/ssl /opt/openssl -name "libcrypto.so" -print 2>/dev/null | while read ffile
  	do
		fdir=`dirname $ffile`
		echo
	        echo "found OpenSSL library libcrypto.so in $fdir."
		echo "CFLAGS  += -DWITH_OPENSSL" >>Makeconf
		echo "SSL_OBJ =" >>Makeconf
		echo "SSL_LIBS = -lcrypto -L$fdir" >>Makeconf
		break
  	done
  fi
}

auto_detect_ssl_includes () {

  #if SSL_INCLUDES already exist in Makeconf, don't add it again
  grep "SSL_INCLUDES" Makeconf >/dev/null 2>/dev/null
  if [ $? -eq 0 ]; then
     break
  fi

  #check if ssl libs were detected or used.
  grep "WITH_OPENSSL" Makeconf >/dev/null 2>/dev/null
  if [ $? -eq 0 ]; then
     #testing if find got the features we're using, if not print a warning.
     find /tmp -name "testfindcapabilities" -print > /dev/null 2>/dev/null
     if [ $? -ne 1 ]; then
        find /usr/freeware/include /usr/include/openssl /usr/include /usr/local/ssl /usr/local/openssl /usr/local/include /opt/include /opt/ssl /opt/openssl -name "ssl.h" -print 2>/dev/null | while read ffile
  	do
           fdir=`dirname $ffile`
	   echo
	   echo "found OpenSSL includes in $fdir."
	   echo "SSL_INCLUDES = -I$fdir" >>Makeconf
	   break
  	done
     fi
  fi
}




for arg in $*; do
optarg=`echo $arg | sed 's/[-a-z]*=//'`
case $arg in
  --prefix=*)
    echo "PREFIX   = $optarg" >>Makeconf
    ;;
  --exec-prefix=*)
    echo "EPREFIX  = $optarg" >>Makeconf
    ;;
  --bindir=*)
    echo "BINDIR   = $optarg" >>Makeconf
    ;;
  --mandir=*)
    echo "MANDIR   = $optarg" >>Makeconf
    ;;
  --enable-final*)
    echo "CFLAGS  += -funroll-loops -fexpensive-optimizations -ffast-math -fomit-frame-pointer -frerun-cse-after-loop" >>Makeconf
    ;;
  --with-openssl*)
    echo "CFLAGS  += -DWITH_OPENSSL" >>Makeconf
    echo "SSL_LIBS = -lcrypto" >>Makeconf
    echo "SSL_OBJ =" >>Makeconf
    ssl=1;
    ;;
  --without-openssl*)
    ssl=0;
    ;;
  --with-ssl-includes=*)
    if [ $ssl -eq 1 ]; then
       echo "SSL_INCLUDES = -I$optarg" >>Makeconf
    fi
    ;;
  --with-ssl-libs=*)
    if [ $ssl -eq 1 ]; then
       echo "SSL_LIBS = -lcrypto -L$optarg" >>Makeconf
    fi
    ;;
  --with-xinerama*)
    echo "CFLAGS += -DWITH_XINERAMA" >>Makeconf
    echo "LDLIBS += -lXinerama -lXext" >>Makeconf
    ;;
  --with-gui=*)
    if [ "$optarg" = "win32" ]; then
       gui="win32";
       echo "CFLAGS += -DGUI_WIN32" >>Makeconf
       echo "GUI_LIBS = \${GUI_WIN32_LIB}" >>Makeconf
       echo "GUI_INCLUDES = \${GUI_WIN32_INC}" >>Makeconf
       echo "GUI_OBJ = \${GUI_WIN32_OBJ}" >>Makeconf
    elif [ "$optarg" = "svga" ]; then
       gui="svga";
       echo "CFLAGS += -DGUI_SVGA" >>Makeconf
       echo "GUI_LIBS = \${GUI_SVGA_LIB}" >>Makeconf
       echo "GUI_INCLUDES = \${GUI_SVGA_INC}" >>Makeconf
       echo "GUI_OBJ = \${GUI_SVGA_OBJ}" >>Makeconf
    elif [ "$optarg" = "amiga" ]; then
       gui="amiga";
       echo "CFLAGS += -DGUI_AMIGA -DNEW_STYLE_MAIN_LOOP" >>Makeconf
       echo "GUI_LIBS = \${GUI_AMIGA_LIB}" >>Makeconf
       echo "GUI_INCLUDES = \${GUI_AMIGA_INC}" >>Makeconf
       echo "GUI_OBJ = \${GUI_AMIGA_OBJ}" >>Makeconf
    fi
    ;;
  --with-gui-libs=*)
    # TODO: shouldn't use +=
    echo "GUI_LIBS += -L$optarg" >>Makeconf
    ;;
  --with-gui-includes=*)
    # TODO: shouldn't use +=
    echo "GUI_INCLUDES += -L$optarg" >>Makeconf
    ;;
  --with-debug)
    echo "CFLAGS  += -g -DWITH_DEBUG" >>Makeconf
    ;;
  --with-debug-rdp)
    echo "CFLAGS  += -g -DWITH_DEBUG_RDP" >>Makeconf
    ;;
  --with-debug-leaks)
    echo "CFLAGS  += -g -DWITH_DEBUG_LEAKS" >>Makeconf
    ;;
  *)
    echo "rdesktop build configuration script"
    echo
    echo "Target directories:"
    echo " --prefix=PREFIX         location for architecture-independent files"
    echo " --exec-prefix=EPREFIX   location for architecture-dependent files"
    echo " --bindir=BINDIR         location for program binaries [EPREFIX/bin]"
    echo " --mandir=MANDIR         location for man pages [PREFIX/man]"
    echo
    echo "Build configuration:"
    echo " --enable-final          enable some compiler optimizations ( recomended )"
    echo
    echo " --with-openssl          use system OpenSSL libraries for crypto"
    echo "                         ( recomended ) [autodetected]"
    echo "                         openssl is available from http://www.openssl.org"
    echo " --without-openssl"
    echo
    echo "   --with-ssl-includes=DIR"
    echo "   --with-ssl-libs=DIR"
    echo
    echo " --with-gui=xwin|win32|svga|amiga use another gui than XWIN. ( not recomended )"
    echo "                              ALPHA option, not compiling with other than"
    echo "                              xwin ( default: xwin )"
    echo
    echo "   --with-gui-includes=DIR"
    echo "   --with-gui-libs=DIR"
    echo
    echo " --with-xinerama         add xinerama support ( requires the X gui )"
    echo
    echo " --with-debug            enable debugging output"
    echo " --with-debug-rdp        enable debugging of the rdp protocol"
    echo " --with-debug-leaks      enable debugging of memory leaks"
    echo
    rm -f Makeconf
    exit 1
    ;;
esac
done

if [ $ssl -eq -1 ]; then
  echo "detecting openssl ..."
  auto_detect_ssl_libs;
  auto_detect_ssl_includes;
fi

if [ $gui = "xwin" ]; then
   echo
   echo "configured for xwin gui"
   echo "CFLAGS += -DGUI_XWIN" >>Makeconf
elif [ $gui = "svga" ]; then
   echo
   echo "the SVGAlib gui should be considered alpha"
   echo "there are some issues that hasn't been fixed yet."
   echo "maybe you have the time to fix them?"
   echo "a lot of switches wont work with this gui, also"
   echo "the screen is hardwired to 800x600x256."
elif [ $gui = "win32" ]; then
   echo
   echo "the win32 gui is not fully functional with the patches.. yet. it wont compile"
elif [ $gui = "amiga" ]; then
   echo echo "configured for AmigaOS"
fi

echo
echo "configure complete - now run make"
echo




