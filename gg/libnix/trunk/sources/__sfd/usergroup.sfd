* This SFD file was automatically generated by fd2sfd from
* /opt/Media/martin/source/aros/External/AROS/contrib/aminet/comm/amitcp/fd/usergroup_lib.fd and
* /opt/Media/martin/source/aros/External/AROS/contrib/aminet/comm/amitcp/clib/usergroup_protos.h.
==base _UserGroupBase
==basetype struct Library *
==libname usergroup.library
==include <amitcp/usergroup.h>
==include <pwd.h>
==include <grp.h>
==include <exec/types.h>
==include <utility/tagitem.h>
**
**	$Filename: fd/usergroup_lib.fd $
**	$Release$
**	$Revision: 1.1 $
**	$Date: 2001/12/25 22:28:13 $
**
**	FD file for usergroup.library
**
**	Copyright (c) 1993 AmiTCP/IP Group, <AmiTCP-Group@hut.fi>
**	    Helsinki University of Technology, Finland.
**	    All rights reserved.
**
*------ Setup functions ------*
==bias 30
==public
int ug_SetupContextTagList(const UBYTE* pname, struct TagItem * taglist) (a0,a1)
==varargs
int ug_SetupContextTags(const UBYTE* pname, Tag taglist, ...) (a0,a1)
int ug_GetErr() ()
const char * ug_StrError(LONG code) (d1)
*------ User identification ------*
uid_t getuid() ()
uid_t geteuid() ()
int setreuid(uid_t real, uid_t eff) (d0,d1)
int setuid(uid_t id) (d0)
*------ Group membership ------*
gid_t getgid() ()
gid_t getegid() ()
int setregid(gid_t real, gid_t eff) (d0,d1)
int setgid(gid_t id) (d0)
int getgroups(int ngroups, gid_t * groups) (d0,a1)
int setgroups(int ngroups, const gid_t * groups) (d0,a1)
int initgroups(const char * name, gid_t basegroup) (a1,d0)
*------ User database ------*
struct passwd * getpwnam(const char * name) (a1)
struct passwd * getpwuid(uid_t uid) (d0)
void setpwent() ()
struct passwd * getpwent() ()
void endpwent() ()
*------ Group database ------*
struct group * getgrnam(const char * name) (a1)
struct group * getgrgid(gid_t gid) (d0)
void setgrent() ()
struct group * getgrent() ()
void endgrent() ()
*------ Password handling ------*
char * crypt(const char * key, const char * salt) (a0,a1)
char * ug_GetSalt(const struct passwd * user, char * buffer, ULONG size) (a0,a1,d0)
char * getpass(const char * prompt) (a1)
*------ Default protections ------*
mode_t umask(mode_t mask) (d0)
mode_t getumask() ()
*------ Sessions ------*
pid_t setsid() ()
pid_t getpgrp() ()
char * getlogin() ()
int setlogin(const char * buffer) (a1)
*------ Sessions, user login database (utmp) ------*
void setutent() ()
struct utmp * getutent() ()
void endutent() ()
struct lastlog * getlastlog(uid_t uid) (d0)
int setlastlog(uid_t uid, char * name, char * host) (d0,a0,a1)
*------ Credentials ------*
struct UserGroupCredentials * getcredentials(struct Task * task) (a0)
==end
