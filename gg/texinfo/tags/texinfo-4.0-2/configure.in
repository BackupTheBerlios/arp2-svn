dnl Process this file with autoconf to produce a configure script.
dnl $Id: configure.in,v 1.74 1999/09/28 19:37:15 karl Exp $
dnl
AC_INIT(makeinfo/makeinfo.c)
AC_PREREQ(2.13)dnl Minimum Autoconf version required.
AM_CONFIG_HEADER(config.h:config.in)dnl Keep filename to 8.3 for MS-DOS.

AM_INIT_AUTOMAKE([texinfo], [4.0])

AM_CONDITIONAL(TEXINFO_MAINT, test -n "$TEXINFO_MAINT")

dnl Checks for programs.
AC_PROG_CC
AC_PROG_GCC_TRADITIONAL
AC_PROG_INSTALL
AC_CHECK_TOOL(RANLIB, ranlib, :)
### begin-GG-local
AC_CHECK_TOOL(AR, ar)
AC_ARFLAGS
### end-GG-local

AC_ISC_POSIX
AC_MINIX

# Needed on sysV68 for sigblock, sigsetmask.  But check for it in libc first.
AC_CHECK_FUNC(sigblock, , AC_CHECK_LIB(bsd, sigblock))

# On some systems, like BeOS, ncurses needs select, which is in libnet
# on pre-bone systems and libsocket on bone-enabled systems.
# So ensure libnet/libsocket will be used in further testing.
AC_SEARCH_LIBS(select, [net socket])

# Some GNU/Linux systems (e.g., SuSE 4.3, 1996) don't have curses, but
# rather ncurses.  So we check for it.
TERMLIBS=
# Check for termlib before termcap because Solaris termcap needs libucb.
for termlib in ncurses curses termlib termcap terminfo; do
   AC_CHECK_LIB(${termlib}, tgetent,
     [TERMLIBS="${TERMLIBS} -l${termlib}"; break])
done

dnl Checks for header files.
dnl Do not use <ncurses/termcap.h> unless we're linking with ncurses.
if test "x$termlib" = xncurses; then
  dnl Use AC_CHECK_HEADERS so the HAVE_*_H symbol gets defined.
  AC_CHECK_HEADERS(ncurses/termcap.h)
fi
AC_HEADER_STAT
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h pwd.h string.h strings.h termcap.h termio.h \
  termios.h unistd.h \
  sys/fcntl.h sys/file.h sys/ptem.h sys/time.h sys/ttold.h sys/wait.h)
AM_SYS_POSIX_TERMIOS
AM_HEADER_TIOCGWINSZ_NEEDS_SYS_IOCTL

dnl Checks for typedefs, structures, and compiler characteristics.
AC_TYPE_OFF_T
AC_TYPE_SIGNAL
AC_C_CONST
AC_STRUCT_TM

dnl Checks for function declarations.
txi_CHECK_DECLS

dnl Checks for library functions.
AC_FUNC_ALLOCA
AC_FUNC_STRCOLL
AC_FUNC_VPRINTF
AC_FUNC_SETVBUF_REVERSED
AC_CHECK_FUNCS(setvbuf getcwd memset bzero strchr sigprocmask sigsetmask)
dnl strerror, xmalloc, xrealloc, probably others should be added.
AC_REPLACE_FUNCS(memcpy memmove strdup strcasecmp strerror strncasecmp)

dnl Enable AmigaGuide target, even on non-AmigaDOS platforms
AC_ARG_ENABLE(amigaguide,
[  --enable-amigaguide     Allow AmigaGuide target on non-AmigaDOS platforms],
  [case "${enableval}" in
    yes) configure_amigaguide=true ;;
    no) configure_amigaguide=false ;;
    *) AC_MSG_ERROR(bad value ${enableval} for AmigaGuide option) ;;
   esac],
  [configure_amigaguide=false])

dnl This should always be true for the GeekGadgets version of makeinfo, 
dnl so enable amigaguide explicit, and use this for conditionals in the
dnl documentation as well.

configure_amigaguide=true

if test "x$configure_amigaguide" = "xtrue"; then
  AC_DEFINE(ENABLE_AMIGAGUIDE)
fi

AM_CONDITIONAL(DOC_AMIGAGUIDE, test "x$configure_amigaguide" = "xtrue")

dnl Checks for variables.
# HP-UX 9 (at least) needs -lncurses which defines termcap variables PC etc.
AC_MSG_CHECKING(for library with termcap variables)
AC_CACHE_VAL(ac_cv_var_ospeed,
oldLIBS=$LIBS 
for trylib in $termlib ncurses curses termlib termcap terminfo; do
   if test "x$trylib" != "x$termlib"; then
     LIBS="$oldLIBS -l$termlib -l$trylib"
   else
     LIBS="$oldLIBS -l$termlib"
   fi
   AC_TRY_LINK(, 
#ifdef HAVE_NCURSES_TERMCAP_H
#include <ncurses/termcap.h>
#else
#ifdef HAVE_TERMCAP_H
#include <termcap.h>
#else
#undef PC
char *BC;
char* *UP;
char PC;      
short ospeed; 
#endif
#endif
return ospeed != 0;
, ac_cv_var_ospeed=$trylib; break)
done
LIBS=$oldLIBS
)
AC_MSG_RESULT($ac_cv_var_ospeed)
if test -n "$ac_cv_var_ospeed" \
   && test "x$termlib" != "x$ac_cv_var_ospeed"; then
  TERMLIBS="${TERMLIBS} -l${ac_cv_var_ospeed}"
fi
AC_SUBST(TERMLIBS)

dnl Set of available languages and i18n macros.
ALL_LINGUAS="cs de de_AT eo fr nl no ru"
AM_GNU_GETTEXT

AC_OUTPUT([Makefile             \
           doc/Makefile         \
           info/Makefile        \
           intl/Makefile        \
           lib/Makefile         \
           makeinfo/Makefile    \
           makeinfo/tests/Makefile \
           po/Makefile.in	\
           util/Makefile        \
           ])
