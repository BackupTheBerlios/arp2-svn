# Glue comes in two flavors, one for flat address spaces and one for base
# relative.  When gen_glue is compiled, which form of glue is generated
# when it is run depends upon whether "__no_baserel" or "__baserel" was defined
# when it was compiled.

#### Start of system configuration section. ####

srcdir =        @srcdir@

ifeq ($(srcdir),.)
srcdir = ..
endif

VPATH :=        $(srcdir)

# Common prefix for machine-independent installed files.
prefix =        @prefix@

# Common prefix for machine-dependent installed files.
exec_prefix =   @exec_prefix@

bindir =        $(exec_prefix)/bin
libdir =        $(exec_prefix)/Sys/libs

INSTALL =       @INSTALL@
INSTALL_DATA =  @INSTALL_DATA@

CC =            @CC@
AS =            @AS@

CFLAGS =        @CFLAGS@
LDFLAGS =       @LDFLAGS@

RANLIB =        @RANLIB@
AR =            @AR@
RM =            rm -f

#### End system configuration section ####

# BASE is defined to be either "no-baserel" or "baserel" by an upper level
# makefile.  The default is "no-baserel".

BASE =          no-baserel

INCS =          -idirafter $(srcdir)/../include

FLAVOR_CFLAGS =
OTHER_CFLAGS =
ALL_CFLAGS =    $(CFLAGS) $(FLAVOR_CFLAGS) $(OTHER_CFLAGS) $(INCS)

LIB =           libglue.a
LIB_P =         libglue_p.a
SHELL =         /bin/sh

.c.o:
		$(CC) $(ALL_CFLAGS) -c $< -o $@

ifeq ($(BASE),baserel)
all:            $(LIB)
else
ifeq ($(BASE),baserel32)
all:            $(LIB)
else
ifeq ($(BASE),powerup)
all:            $(LIB)
else
ifeq ($(BASE),morphos)
all:            $(LIB)
else
ifeq ($(BASE),powerup-rel)
all:            $(LIB)
else
ifeq ($(BASE),morphos-rel)
all:            $(LIB)
else
ifeq ($(BASE),morphos-rel32)
all:            $(LIB)
else
all:            $(LIB) $(LIB_P)
endif
endif
endif
endif
endif
endif
endif

#$(LIB):         gen_glue
#		rm -f *.o
#		./gen_glue $(BASE)
#		$(AR) r $@ *.o
#		rm -f *.o

$(LIB):         gen_asm_glue
		rm -f *.o *.s
		./gen_asm_glue $(BASE)
		for file in *.s; do \
		  echo $${file}; \
		  $(AS) $${file} -o `basename $${file} .s`.o; \
		done
		$(AR) r $@ *.o
		rm -f *.o *.s

#$(LIB_P):       gen_glue
#		rm -f *.o
#		./gen_glue profiling
#		$(AR) r $@ *.o
#		rm -f *.o

$(LIB_P):       gen_asm_glue
		rm -f *.o *.s
		./gen_asm_glue profiling
		for file in *.s; do \
		  echo $${file}; \
		  $(AS) $${file} -o `basename $${file} .s`.o; \
		done
		$(AR) r $@ *.o
		rm -f *.o *.s

gen_glue:       gen_glue.c $(srcdir)/../include/sys/ixemul_syscall.def
		$(CC) $(ALL_CFLAGS) $< -o $@

gen_asm_glue:	gen_asm_glue.c $(srcdir)/../include/sys/ixemul_syscall.def
		$(CC) $(ALL_CFLAGS) $< -o $@

clean:
		rm -rf *baserel* *morphos* *powerup*

clobber:        clean
		rm -f Makefile
