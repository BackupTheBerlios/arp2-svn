
This is a X11 based, OpenGL-accelerated Amiga-like graphics library
for Linux.  Currently, it handles "monitors" (some kind of physical
screen/display), "bitmaps" (a surface you can draw to and display in
various ways), "sprites" (a bitmap rendered on top of everything
else), "viewports" (a screen area that displays one or more bitmaps),
"views" (a collection of viewports and sprites) and input events from
the keyboard and the mouse.

It is designed to operate at a fixed resolution (like on a flat panel
or projector setup), but does support custom frame rates for smooth
video playback at PAL or NTSC speeds (or rather, it will).

In the future, it's going to handle OpenGL for the clients as well,
more accelerated rendering into bitmaps and YUV pixel formats for
video.

It requires a modern 3D card (DirectX 9 class or better) and
top-quality OpenGL drivers.  To be honest, I don't expect to to run on
anything else than NVIDIA's and possibly ATI's cards.

The following OpenGL extensions are required:

 * OpenGL version 2.0 or later
 * GL_(ARB|EXT)_texture_rectangle
 * GL_ARB_window_pos
 * GL_EXT_framebuffer_object
 * GL_NV_blend_square (or some blend modes will be missing)

In addition, the following extensions can be used if present but are
not required:

 * GL_ARB_pixel_buffer_object
 * GLX_SGI_video_sync

The following "Amiga" features are currently supported:

 * The display ("view") is composed from one or more viewports.  Each
viewport can display one or more bitmaps (like "dual playfield" but an
unlimited number of bitmaps can be used).

 * Every bitmap in a viewport can be displayed in a different
resolution, be palette based (one day) etc.

 * Different viewports and sprites can use the same bitmap.

 * Blitting can use arbitrary minterms.

The following extra features are on the to-do list:

 * It is possible to add one or more GLSL vertex and fragment shaders
to a viewport.  It is also possible, if the hardware supports it, to
add more additional GLSL fragment shaders to each individual bitmap in
a viewport.
